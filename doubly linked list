class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
        self.prev = None
class DoublyLinkedList:
    def __init__(self):
        self.head = None
        self.tail = None
    def append(self, data):
        new_node = Node(data)
        if not self.head:
            self.head = new_node
            self.tail = new_node
        else:
            new_node.prev = self.tail
            self.tail.next = new_node
            self.tail = new_node
def createDoublyLinkedListFromMatrix(matrix):
    if not matrix:
        return None
    linked_list = DoublyLinkedList()
    for row in matrix:
        for element in row:
            linked_list.append(element)
    return linked_list
def printDoublyLinkedList(linked_list):
    current = linked_list.head
    while current:
        print(current.data, end=" <-> ")
        current = current.next
    print("None")
matrix = [
    [51, 52, 53],
    [54, 55, 56],
    [57, 58, 59]
]
doubly_linked_list = createDoublyLinkedListFromMatrix(matrix)
print("Doubly Linked List from Matrix:")
printDoublyLinkedList(doubly_linked_list)
